// This file is autogenerated by the hyperdb compiler
/* eslint-disable camelcase */

const { IndexEncoder, c } = require('hyperdb/runtime')
const { version, getEncoding, setVersion } = require('./messages.js')

// '@gigaroom/writer' collection key
const collection0_key = new IndexEncoder([
  IndexEncoder.BUFFER
], { prefix: 0 })

function collection0_indexify (record) {
  const a = record.key
  return a === undefined ? [] : [a]
}

// '@gigaroom/writer' value encoding
const collection0_enc = getEncoding('@gigaroom/writer/hyperdb#0')

// '@gigaroom/writer' reconstruction function
function collection0_reconstruct (version, keyBuf, valueBuf) {
  const key = collection0_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection0_enc, valueBuf)
  record.key = key[0]
  return record
}
// '@gigaroom/writer' key reconstruction function
function collection0_reconstruct_key (keyBuf) {
  const key = collection0_key.decode(keyBuf)
  return {
    key: key[0]
  }
}

// '@gigaroom/writer'
const collection0 = {
  name: '@gigaroom/writer',
  id: 0,
  encodeKey (record) {
    const key = [record.key]
    return collection0_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection0_key.encodeRange({
      gt: gt ? collection0_indexify(gt) : null,
      lt: lt ? collection0_indexify(lt) : null,
      gte: gte ? collection0_indexify(gte) : null,
      lte: lte ? collection0_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection0_enc, record)
  },
  trigger: null,
  reconstruct: collection0_reconstruct,
  reconstructKey: collection0_reconstruct_key,
  indexes: []
}

// '@gigaroom/invite' collection key
const collection1_key = new IndexEncoder([
  IndexEncoder.BUFFER
], { prefix: 1 })

function collection1_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/invite' value encoding
const collection1_enc = getEncoding('@gigaroom/invite/hyperdb#1')

// '@gigaroom/invite' reconstruction function
function collection1_reconstruct (version, keyBuf, valueBuf) {
  const key = collection1_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection1_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/invite' key reconstruction function
function collection1_reconstruct_key (keyBuf) {
  const key = collection1_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/invite'
const collection1 = {
  name: '@gigaroom/invite',
  id: 1,
  encodeKey (record) {
    const key = [record.id]
    return collection1_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection1_key.encodeRange({
      gt: gt ? collection1_indexify(gt) : null,
      lt: lt ? collection1_indexify(lt) : null,
      gte: gte ? collection1_indexify(gte) : null,
      lte: lte ? collection1_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection1_enc, record)
  },
  trigger: null,
  reconstruct: collection1_reconstruct,
  reconstructKey: collection1_reconstruct_key,
  indexes: []
}

// '@gigaroom/message' collection key
const collection2_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 2 })

function collection2_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/message' value encoding
const collection2_enc = getEncoding('@gigaroom/message/hyperdb#2')

// '@gigaroom/message' reconstruction function
function collection2_reconstruct (version, keyBuf, valueBuf) {
  const key = collection2_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection2_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/message' key reconstruction function
function collection2_reconstruct_key (keyBuf) {
  const key = collection2_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/message'
const collection2 = {
  name: '@gigaroom/message',
  id: 2,
  encodeKey (record) {
    const key = [record.id]
    return collection2_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection2_key.encodeRange({
      gt: gt ? collection2_indexify(gt) : null,
      lt: lt ? collection2_indexify(lt) : null,
      gte: gte ? collection2_indexify(gte) : null,
      lte: lte ? collection2_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection2_enc, record)
  },
  trigger: null,
  reconstruct: collection2_reconstruct,
  reconstructKey: collection2_reconstruct_key,
  indexes: []
}

// '@gigaroom/reaction' collection key
const collection3_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 3 })

function collection3_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/reaction' value encoding
const collection3_enc = getEncoding('@gigaroom/reaction/hyperdb#3')

// '@gigaroom/reaction' reconstruction function
function collection3_reconstruct (version, keyBuf, valueBuf) {
  const key = collection3_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection3_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/reaction' key reconstruction function
function collection3_reconstruct_key (keyBuf) {
  const key = collection3_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/reaction'
const collection3 = {
  name: '@gigaroom/reaction',
  id: 3,
  encodeKey (record) {
    const key = [record.id]
    return collection3_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection3_key.encodeRange({
      gt: gt ? collection3_indexify(gt) : null,
      lt: lt ? collection3_indexify(lt) : null,
      gte: gte ? collection3_indexify(gte) : null,
      lte: lte ? collection3_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection3_enc, record)
  },
  trigger: null,
  reconstruct: collection3_reconstruct,
  reconstructKey: collection3_reconstruct_key,
  indexes: []
}

// '@gigaroom/room' collection key
const collection4_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 4 })

function collection4_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/room' value encoding
const collection4_enc = getEncoding('@gigaroom/room/hyperdb#4')

// '@gigaroom/room' reconstruction function
function collection4_reconstruct (version, keyBuf, valueBuf) {
  const key = collection4_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection4_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/room' key reconstruction function
function collection4_reconstruct_key (keyBuf) {
  const key = collection4_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/room'
const collection4 = {
  name: '@gigaroom/room',
  id: 4,
  encodeKey (record) {
    const key = [record.id]
    return collection4_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection4_key.encodeRange({
      gt: gt ? collection4_indexify(gt) : null,
      lt: lt ? collection4_indexify(lt) : null,
      gte: gte ? collection4_indexify(gte) : null,
      lte: lte ? collection4_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection4_enc, record)
  },
  trigger: null,
  reconstruct: collection4_reconstruct,
  reconstructKey: collection4_reconstruct_key,
  indexes: []
}

// '@gigaroom/member' collection key
const collection5_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 5 })

function collection5_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/member' value encoding
const collection5_enc = getEncoding('@gigaroom/member/hyperdb#5')

// '@gigaroom/member' reconstruction function
function collection5_reconstruct (version, keyBuf, valueBuf) {
  const key = collection5_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection5_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/member' key reconstruction function
function collection5_reconstruct_key (keyBuf) {
  const key = collection5_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/member'
const collection5 = {
  name: '@gigaroom/member',
  id: 5,
  encodeKey (record) {
    const key = [record.id]
    return collection5_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection5_key.encodeRange({
      gt: gt ? collection5_indexify(gt) : null,
      lt: lt ? collection5_indexify(lt) : null,
      gte: gte ? collection5_indexify(gte) : null,
      lte: lte ? collection5_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection5_enc, record)
  },
  trigger: null,
  reconstruct: collection5_reconstruct,
  reconstructKey: collection5_reconstruct_key,
  indexes: []
}

// '@gigaroom/role' collection key
const collection6_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 6 })

function collection6_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/role' value encoding
const collection6_enc = getEncoding('@gigaroom/role/hyperdb#6')

// '@gigaroom/role' reconstruction function
function collection6_reconstruct (version, keyBuf, valueBuf) {
  const key = collection6_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection6_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/role' key reconstruction function
function collection6_reconstruct_key (keyBuf) {
  const key = collection6_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/role'
const collection6 = {
  name: '@gigaroom/role',
  id: 6,
  encodeKey (record) {
    const key = [record.id]
    return collection6_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection6_key.encodeRange({
      gt: gt ? collection6_indexify(gt) : null,
      lt: lt ? collection6_indexify(lt) : null,
      gte: gte ? collection6_indexify(gte) : null,
      lte: lte ? collection6_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection6_enc, record)
  },
  trigger: null,
  reconstruct: collection6_reconstruct,
  reconstructKey: collection6_reconstruct_key,
  indexes: []
}

// '@gigaroom/permissionOverride' collection key
const collection7_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 7 })

function collection7_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/permissionOverride' value encoding
const collection7_enc = getEncoding('@gigaroom/permissionOverride/hyperdb#7')

// '@gigaroom/permissionOverride' reconstruction function
function collection7_reconstruct (version, keyBuf, valueBuf) {
  const key = collection7_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection7_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/permissionOverride' key reconstruction function
function collection7_reconstruct_key (keyBuf) {
  const key = collection7_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/permissionOverride'
const collection7 = {
  name: '@gigaroom/permissionOverride',
  id: 7,
  encodeKey (record) {
    const key = [record.id]
    return collection7_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection7_key.encodeRange({
      gt: gt ? collection7_indexify(gt) : null,
      lt: lt ? collection7_indexify(lt) : null,
      gte: gte ? collection7_indexify(gte) : null,
      lte: lte ? collection7_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection7_enc, record)
  },
  trigger: null,
  reconstruct: collection7_reconstruct,
  reconstructKey: collection7_reconstruct_key,
  indexes: []
}

// '@gigaroom/thread' collection key
const collection8_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 8 })

function collection8_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/thread' value encoding
const collection8_enc = getEncoding('@gigaroom/thread/hyperdb#8')

// '@gigaroom/thread' reconstruction function
function collection8_reconstruct (version, keyBuf, valueBuf) {
  const key = collection8_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection8_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/thread' key reconstruction function
function collection8_reconstruct_key (keyBuf) {
  const key = collection8_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/thread'
const collection8 = {
  name: '@gigaroom/thread',
  id: 8,
  encodeKey (record) {
    const key = [record.id]
    return collection8_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection8_key.encodeRange({
      gt: gt ? collection8_indexify(gt) : null,
      lt: lt ? collection8_indexify(lt) : null,
      gte: gte ? collection8_indexify(gte) : null,
      lte: lte ? collection8_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection8_enc, record)
  },
  trigger: null,
  reconstruct: collection8_reconstruct,
  reconstructKey: collection8_reconstruct_key,
  indexes: []
}

// '@gigaroom/channel' collection key
const collection9_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 9 })

function collection9_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/channel' value encoding
const collection9_enc = getEncoding('@gigaroom/channel/hyperdb#9')

// '@gigaroom/channel' reconstruction function
function collection9_reconstruct (version, keyBuf, valueBuf) {
  const key = collection9_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection9_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/channel' key reconstruction function
function collection9_reconstruct_key (keyBuf) {
  const key = collection9_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/channel'
const collection9 = {
  name: '@gigaroom/channel',
  id: 9,
  encodeKey (record) {
    const key = [record.id]
    return collection9_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection9_key.encodeRange({
      gt: gt ? collection9_indexify(gt) : null,
      lt: lt ? collection9_indexify(lt) : null,
      gte: gte ? collection9_indexify(gte) : null,
      lte: lte ? collection9_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection9_enc, record)
  },
  trigger: null,
  reconstruct: collection9_reconstruct,
  reconstructKey: collection9_reconstruct_key,
  indexes: []
}

// '@gigaroom/category' collection key
const collection10_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 10 })

function collection10_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/category' value encoding
const collection10_enc = getEncoding('@gigaroom/category/hyperdb#10')

// '@gigaroom/category' reconstruction function
function collection10_reconstruct (version, keyBuf, valueBuf) {
  const key = collection10_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection10_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/category' key reconstruction function
function collection10_reconstruct_key (keyBuf) {
  const key = collection10_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/category'
const collection10 = {
  name: '@gigaroom/category',
  id: 10,
  encodeKey (record) {
    const key = [record.id]
    return collection10_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection10_key.encodeRange({
      gt: gt ? collection10_indexify(gt) : null,
      lt: lt ? collection10_indexify(lt) : null,
      gte: gte ? collection10_indexify(gte) : null,
      lte: lte ? collection10_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection10_enc, record)
  },
  trigger: null,
  reconstruct: collection10_reconstruct,
  reconstructKey: collection10_reconstruct_key,
  indexes: []
}

// '@gigaroom/file' collection key
const collection11_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 11 })

function collection11_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/file' value encoding
const collection11_enc = getEncoding('@gigaroom/file/hyperdb#11')

// '@gigaroom/file' reconstruction function
function collection11_reconstruct (version, keyBuf, valueBuf) {
  const key = collection11_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection11_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/file' key reconstruction function
function collection11_reconstruct_key (keyBuf) {
  const key = collection11_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/file'
const collection11 = {
  name: '@gigaroom/file',
  id: 11,
  encodeKey (record) {
    const key = [record.id]
    return collection11_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection11_key.encodeRange({
      gt: gt ? collection11_indexify(gt) : null,
      lt: lt ? collection11_indexify(lt) : null,
      gte: gte ? collection11_indexify(gte) : null,
      lte: lte ? collection11_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection11_enc, record)
  },
  trigger: null,
  reconstruct: collection11_reconstruct,
  reconstructKey: collection11_reconstruct_key,
  indexes: []
}

// '@gigaroom/mention' collection key
const collection12_key = new IndexEncoder([
  IndexEncoder.STRING
], { prefix: 12 })

function collection12_indexify (record) {
  const a = record.id
  return a === undefined ? [] : [a]
}

// '@gigaroom/mention' value encoding
const collection12_enc = getEncoding('@gigaroom/mention/hyperdb#12')

// '@gigaroom/mention' reconstruction function
function collection12_reconstruct (version, keyBuf, valueBuf) {
  const key = collection12_key.decode(keyBuf)
  setVersion(version)
  const record = c.decode(collection12_enc, valueBuf)
  record.id = key[0]
  return record
}
// '@gigaroom/mention' key reconstruction function
function collection12_reconstruct_key (keyBuf) {
  const key = collection12_key.decode(keyBuf)
  return {
    id: key[0]
  }
}

// '@gigaroom/mention'
const collection12 = {
  name: '@gigaroom/mention',
  id: 12,
  encodeKey (record) {
    const key = [record.id]
    return collection12_key.encode(key)
  },
  encodeKeyRange ({ gt, lt, gte, lte } = {}) {
    return collection12_key.encodeRange({
      gt: gt ? collection12_indexify(gt) : null,
      lt: lt ? collection12_indexify(lt) : null,
      gte: gte ? collection12_indexify(gte) : null,
      lte: lte ? collection12_indexify(lte) : null
    })
  },
  encodeValue (version, record) {
    setVersion(version)
    return c.encode(collection12_enc, record)
  },
  trigger: null,
  reconstruct: collection12_reconstruct,
  reconstructKey: collection12_reconstruct_key,
  indexes: []
}

const collections = [
  collection0,
  collection1,
  collection2,
  collection3,
  collection4,
  collection5,
  collection6,
  collection7,
  collection8,
  collection9,
  collection10,
  collection11,
  collection12
]

const indexes = [
]

module.exports = { version, collections, indexes, resolveCollection, resolveIndex }

function resolveCollection (name) {
  switch (name) {
    case '@gigaroom/writer': return collection0
    case '@gigaroom/invite': return collection1
    case '@gigaroom/message': return collection2
    case '@gigaroom/reaction': return collection3
    case '@gigaroom/room': return collection4
    case '@gigaroom/member': return collection5
    case '@gigaroom/role': return collection6
    case '@gigaroom/permissionOverride': return collection7
    case '@gigaroom/thread': return collection8
    case '@gigaroom/channel': return collection9
    case '@gigaroom/category': return collection10
    case '@gigaroom/file': return collection11
    case '@gigaroom/mention': return collection12
    default: return null
  }
}

function resolveIndex (name) {
  switch (name) {
    default: return null
  }
}
